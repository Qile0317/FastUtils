% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spelling.R
\name{trySplit}
\alias{trySplit}
\title{Try to Split Names Based on Naming Convention}
\usage{
trySplit(x, conseq = TRUE, strictSnake = FALSE, uncase = TRUE)
}
\arguments{
\item{x}{A character string or vector to be analyzed and split.}

\item{conseq}{A logical indicating whether the \code{conseq} argument in \code{\link[=splitCamel]{splitCamel()}}/
\code{\link[=splitPascal]{splitPascal()}} should be \code{TRUE} or \code{FALSE}.}

\item{strictSnake}{A logical indicating the \code{strict} argument in \code{\link[=isSnakeCase]{isSnakeCase()}}.}

\item{uncase}{A logical indicating whether to remove all casing in the output to
lowercase.}
}
\value{
A list of character vectors, each containing the parts of the string
split according to its naming convention or the original string if no
convention matches.
}
\description{
This function attempts to split characters into its component words (and by default,
all in lowercase) based on  camelCase, PascalCase, or snake_case conventions. If
the string does not match any of these conventions, it returns the original string.
}
\examples{
trySplit("camelCaseExample")
trySplit("PascalCaseExample")
trySplit("snake_case_example")
trySplit("some|random|case")

}
\seealso{
\code{\link{splitCamel}}, \code{\link{splitPascal}}, \code{\link{splitSnake}},
\code{\link{isCamelCase}}, \code{\link{isPascalCase}}, \code{\link{isSnakeCase}}
}
\keyword{spelling}
