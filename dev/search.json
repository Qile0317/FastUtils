[{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting qile.yang [] berkeley.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. leader(s) obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Qile Yang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/articles/install.html","id":"installation-of-development-editions","dir":"Articles","previous_headings":"","what":"Installation of Development Editions","title":"Installing FastUtils","text":"","code":"devtools::install_github(\"Qile0317/FastUtils\")"},{"path":"https://qile0317.github.io/FastUtils/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Qile Yang. Maintainer, author, copyright holder.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yang Q (2024). FastUtils.","code":"@Manual{,   title = {FastUtils},   author = {Qile Yang},   year = {2024}, }"},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"fastutils","dir":"","previous_headings":"","what":"Fast, Readable Utility Functions","title":"Fast, Readable Utility Functions","text":"R package wide variety fast, readable functions general data analysis, wrangling, spelling, statistics, visualizations, package development, . functions vectorized implementations whenever possible.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast, Readable Utility Functions","text":"FastUtils registered CRAN. install, try following latest development edition, try following","code":"install.packages(\"FastUtils\") library(devtools) devtools::install_github(\"Qile0317/FastUtils\")"},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"usage-and-documentation","dir":"","previous_headings":"","what":"Usage and Documentation","title":"Fast, Readable Utility Functions","text":"large collection utility functions use. Browse reference manual help(package = \"FastUtils\") see functions. Alternatively, check reference manual online : https://qile0317.github.io/FastUtils/reference/index.html.","code":"library(FastUtils)"},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"package-conventions","dir":"","previous_headings":"Usage and Documentation","what":"Package Conventions","title":"Fast, Readable Utility Functions","text":"Almost exported functions parameters named camelCase, exception try modify add existing functions packages established ecosystems testthat.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Fast, Readable Utility Functions","text":"Github pull requests forked branches welcome mostly solo-project moment. major changes, please open issue first discuss like change. Please also make sure update tests appropriate. See CONTRIBUTING.md information.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Fast, Readable Utility Functions","text":"Qile Yang - qile.yang [] berkeley.edu","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/FastUtils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"FastUtils: Fast, Readable Utility Functions — FastUtils-package","title":"FastUtils: Fast, Readable Utility Functions — FastUtils-package","text":"wide variety tools general data analysis, wrangling, spelling, statistics, visualizations, package development, . functions vectorized implementations whenever possible.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/FastUtils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FastUtils: Fast, Readable Utility Functions — FastUtils-package","text":"Maintainer: Qile Yang qile.yang@berkeley.edu [copyright holder]","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Two Objects — add","title":"Add Two Objects — add","text":"function adds two objects. objects numeric vectors, performs element-wise addition. one objects strings, concatenates . objects, attempts use + method defined class objects.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Two Objects — add","text":"","code":"add(x, y)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Two Objects — add","text":"x object. y object.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Two Objects — add","text":"result adding two objects.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Two Objects — add","text":"","code":"# Add two numeric vectors add(c(1, 2, 3), c(4, 5, 6)) #> [1] 5 7 9 # Concatenate two strings add(\"hello\", \"world\") #> [1] \"helloworld\" # Add a number and a string (concatenation) add(1, \" world\") #> [1] \"1 world\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/bound.html","id":null,"dir":"Reference","previous_headings":"","what":"Bound a Number within a Range — bound","title":"Bound a Number within a Range — bound","text":"function bounds number within specified range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/bound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bound a Number within a Range — bound","text":"","code":"bound(num, lowerbound, upperbound)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/bound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bound a Number within a Range — bound","text":"num numeric vector bounded. lowerbound lower bound range. upperbound upper bound range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/bound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bound a Number within a Range — bound","text":"numeric vector elements bounded within specified range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/bound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bound a Number within a Range — bound","text":"","code":"bound(1, 0, 2) #> [1] 1 bound(1:10, -1, 5) #>  [1] 1 2 3 4 5 5 5 5 5 5"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/closestWord.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Closest Word in a Set to a Given Word — closestWord","title":"Find the Closest Word in a Set to a Given Word — closestWord","text":"function finds closest word set words given word based specified distance function.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/closestWord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Closest Word in a Set to a Given Word — closestWord","text":"","code":"closestWord(s, strset, distFunc = utils::adist)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/closestWord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Closest Word in a Set to a Given Word — closestWord","text":"s character string. strset set character strings. distFunc function compute distance strings. Default utils::adist.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/closestWord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Closest Word in a Set to a Given Word — closestWord","text":"closest word set given word.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/closestWord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the Closest Word in a Set to a Given Word — closestWord","text":"","code":"# Find the closest word to \"hello\" in the set c(\"hallo\", \"hullo\", \"hey\") closestWord(\"hello\", c(\"hallo\", \"hullo\", \"hey\")) #> [1] \"hallo\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/colToRownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Column to Row Names — colToRownames","title":"Convert a Column to Row Names — colToRownames","text":"function converts specified column data frame row names, ensuring uniqueness necessary.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/colToRownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Column to Row Names — colToRownames","text":"","code":"colToRownames(df, col, .remove = TRUE, .uniqueSep = \".\")"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/colToRownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Column to Row Names — colToRownames","text":"df data frame. col character string specifying name column convert row names. .remove logical indicating whether remove selected column converting row names. Default TRUE. .uniqueSep character string separate duplicate row names ensuring uniqueness make.unique(). Default \".\".","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/colToRownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Column to Row Names — colToRownames","text":"data frame specified column row names. .remove TRUE, original column removed.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/colToRownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Column to Row Names — colToRownames","text":"","code":"# Convert the 'ID' column to row names df <- data.frame(ID = c(\"A\", \"B\", \"C\"), Value = c(10, 20, 30)) colToRownames(df, \"ID\") #>   Value #> A    10 #> B    20 #> C    30 # Convert the 'ID' column to row names and keep the column df <- data.frame(ID = c(\"A\", \"B\", \"C\"), Value = c(10, 20, 30)) colToRownames(df, \"ID\", .remove = FALSE) #>   ID Value #> A  A    10 #> B  B    20 #> C  C    30"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createHash.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Hash Table — createHash","title":"Create a Hash Table — createHash","text":"function creates hash table set keys optional initial value. Note simply convenience wrapper hash package.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createHash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Hash Table — createHash","text":"","code":"createHash(keys, init_vals = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createHash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Hash Table — createHash","text":"keys vector keys hash table. init_vals Optional initial value hash table.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createHash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Hash Table — createHash","text":"hash table specified keys initial values.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createHash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Hash Table — createHash","text":"","code":"# Create a hash table with keys and no initial values createHash(c(\"a\", \"b\", \"c\")) #> <S4 Type Object> #> attr(,\".xData\") #> <environment: 0x55c39361ad40> # Create a hash table with keys and initial value of 0 createHash(c(\"a\", \"b\", \"c\"), 0) #> <S4 Type Object> #> attr(,\".xData\") #> <environment: 0x55c3934d6138>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createMutator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Mutator Function — createMutator","title":"Create a Mutator Function — createMutator","text":"function creates mutator function based specified binary operator. output mutator function updates variable parent frame applying binary operator given value. recommended use function easily construct special functions form %f% f can symbol choice. See examples.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createMutator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Mutator Function — createMutator","text":"","code":"createMutator(binaryOperator)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createMutator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Mutator Function — createMutator","text":"binaryOperator binary operator function apply mutation.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createMutator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Mutator Function — createMutator","text":"function takes variable value, applying binary operator update variable parent frame.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createMutator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Mutator Function — createMutator","text":"","code":"\"%+=%\" <- createMutator(add) x <- 1 x %+=% 1 x # becomes 2 #> [1] 2"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createPkgLoader.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Package Loader Function — createPkgLoader","title":"Create Package Loader Function — createPkgLoader","text":"function creates package loader function can install load packages CRAN, Bioconductor, GitHub, optionally displaying verbose output. function can useful new R instances little dependencies available. function takes following arguments: cran bioc gh verbose cranandbioctake character vectors package names CRAN Bioconductor, whileghtakes character vectors formattinggithubUsername/packageName. verbose` takes logical whether display additional informative messages REPL. function install packages can already loaded default.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createPkgLoader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Package Loader Function — createPkgLoader","text":"","code":"createPkgLoader(lib = .libPaths()[1])"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createPkgLoader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Package Loader Function — createPkgLoader","text":"lib character vector specifying library directory package installation output function. Defaults current default package installation directory .libPaths()[1]","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createPkgLoader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Package Loader Function — createPkgLoader","text":"function installs loads packages.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/createPkgLoader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Package Loader Function — createPkgLoader","text":"","code":"# Create the package loader function loader <- createPkgLoader()  # # commented usage example # loader( #   cran = c(\"dplyr\", \"ggplot2\"), #   bioc = c(\"GenomicRanges\", \"Biobase\"), #   gh = c(\"tidyverse/dplyr\"), #   verbose = FALSE # )"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide Two Numbers — divide","title":"Divide Two Numbers — divide","text":"function divides one number another.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide Two Numbers — divide","text":"","code":"divide(x, y)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide Two Numbers — divide","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide Two Numbers — divide","text":"numeric vector representing quotient input vectors.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/divide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divide Two Numbers — divide","text":"","code":"# Divide two numeric vectors divide(c(10, 20, 30), c(2, 4, 5)) #> [1] 5 5 6"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enclose.html","id":null,"dir":"Reference","previous_headings":"","what":"Enclose String with Specified Characters — enclose","title":"Enclose String with Specified Characters — enclose","text":"function encloses string specified characters left right.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enclose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enclose String with Specified Characters — enclose","text":"","code":"enclose(x, left, right)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enclose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enclose String with Specified Characters — enclose","text":"x character string enclose. left character string prepend. right character string append.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enclose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enclose String with Specified Characters — enclose","text":"new character string x enclosed left right.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enclose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enclose String with Specified Characters — enclose","text":"","code":"enclose(\"text\", \"[\", \"]\") # returns \"[text]\" #> [1] \"[text]\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/encloseBr.html","id":null,"dir":"Reference","previous_headings":"","what":"Enclose String with Brackets — encloseBr","title":"Enclose String with Brackets — encloseBr","text":"function encloses string parentheses.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/encloseBr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enclose String with Brackets — encloseBr","text":"","code":"encloseBr(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/encloseBr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enclose String with Brackets — encloseBr","text":"x character string enclose.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/encloseBr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enclose String with Brackets — encloseBr","text":"new character string x enclosed parentheses.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/encloseBr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enclose String with Brackets — encloseBr","text":"","code":"encloseBr(\"text\") # returns \"(text)\" #> [1] \"(text)\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enumerateit.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate Elements with Indices — enumerateit","title":"Enumerate Elements with Indices — enumerateit","text":"function pairs elements vectors lists indices. output meant used loop, element extracted ind(), val(), val1() functions. slightly lighter weight alternative itertools::enumerate()","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enumerateit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate Elements with Indices — enumerateit","text":"","code":"enumerateit(..., zero_indexed = FALSE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enumerateit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate Elements with Indices — enumerateit","text":"... Vectors lists enumerated. zero_indexed logical indicating whether indexing start zero. Default FALSE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enumerateit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate Elements with Indices — enumerateit","text":"list lists, inner list contains index corresponding elements input vectors lists.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/enumerateit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enumerate Elements with Indices — enumerateit","text":"","code":"# Enumerate a vector enumerateit(c(\"a\", \"b\", \"c\")) #> [[1]] #> [[1]][[1]] #> [1] 1 #>  #> [[1]][[2]] #> [1] \"a\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 2 #>  #> [[2]][[2]] #> [1] \"b\" #>  #>  #> [[3]] #> [[3]][[1]] #> [1] 3 #>  #> [[3]][[2]] #> [1] \"c\" #>  #>  # Enumerate a vector starting from zero enumerateit(c(\"a\", \"b\", \"c\"), zero_indexed = TRUE) #> [[1]] #> [[1]][[1]] #> [1] 0 #>  #> [[1]][[2]] #> [1] \"a\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 1 #>  #> [[2]][[2]] #> [1] \"b\" #>  #>  #> [[3]] #> [[3]][[1]] #> [1] 2 #>  #> [[3]][[2]] #> [1] \"c\" #>  #>  # Enumerate two vectors enumerateit(c(1, 2), c(\"x\", \"y\")) #> [[1]] #> [[1]][[1]] #> [1] 1 #>  #> [[1]][[2]] #> [1] 1 #>  #> [[1]][[3]] #> [1] \"x\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 2 #>  #> [[2]][[2]] #> [1] 2 #>  #> [[2]][[3]] #> [1] \"y\" #>  #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/findMissingRdSections.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Missing Sections in Rd Files — findMissingRdSections","title":"Find Missing Sections in Rd Files — findMissingRdSections","text":"function scans Rd documentation files specified package's \\man directory identify functions lack certain documentation sections like \\examples. missing sections Rd files, output character(0)","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/findMissingRdSections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Missing Sections in Rd Files — findMissingRdSections","text":"","code":"findMissingRdSections(   sectionName,   pkg = \".\",   ignore = NULL,   .ignore = \"-package$\" )  fmrs(sectionName, pkg = \".\", ignore = NULL, .ignore = \"-package$\")"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/findMissingRdSections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Missing Sections in Rd Files — findMissingRdSections","text":"sectionName character vector Rd sections look . pkg path package directory, defaulting current directory \".\". ignore Additional Regexes function names ignored output. .ignore regexes functions ignore set default. appended ignore regexes unioned joinRegex().","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/findMissingRdSections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Missing Sections in Rd Files — findMissingRdSections","text":"Character vector function names missing specified sections Rd files. May length 0 fulfill criteria.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/findMissingRdSections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Missing Sections in Rd Files — findMissingRdSections","text":"","code":"try(   findMissingRdSections(c(\"examples\", \"example\"), pkg = \".\"),   silent = TRUE )"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/fixColnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Column Names — fixColnames","title":"Fix Column Names — fixColnames","text":"function fixes column names given object words spaced specified delimiter, special characters replaced according substitution map.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/fixColnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Column Names — fixColnames","text":"","code":"fixColnames(   object,   invalidRegex = \"( )|(\\\\()|(\\\\))|(\\\\.)|(/)\",   spacing = \"_\",   subMap = NULL,   .subMap = list(`%+` = \"pct\", `\\\\$+` = \"dollars\", `\\\\++` = \"plus\", `-+` = \"minus\",     `\\\\*+` = \"star\", `#+` = \"cnt\", `&+` = \"and\", `@+` = \"at\"),   unique = FALSE )"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/fixColnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Column Names — fixColnames","text":"object data frame matrix. invalidRegex character string containing regular expression pattern invalid characters replace. Default \"( )|(\\()|(\\))|(\\.)|(/)\". spacing character string replace invalid characters . Default \"_\". subMap named list names regular expressions values replacement strings. substitutions applied .subMap. .subMap named list names regular expressions values replacement strings. substitutions applied subMap. Default list(\"\\+\" = \"plus\"). unique logical indicating whether ensure unique column names appending suffix necessary. Default FALSE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/fixColnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Column Names — fixColnames","text":"data frame matrix fixed column names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/fixColnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix Column Names — fixColnames","text":"","code":"# Fix column names of a data frame df <- data.frame(`A (1)` = c(1, 2, 3), `B/C` = c(4, 5, 6), `D+E` = c(7, 8, 9)) fixColnames(df) #>   a_1 b_c d_e #> 1   1   4   7 #> 2   2   5   8 #> 3   3   6   9"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Average of Hex Colors — getAvgHex","title":"Compute the Average of Hex Colors — getAvgHex","text":"function computes average color provided hex color values.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Average of Hex Colors — getAvgHex","text":"","code":"getAvgHex(...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compute the Average of Hex Colors — getAvgHex","text":"https://stackoverflow.com/questions/649454","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Average of Hex Colors — getAvgHex","text":"... Hex color values character strings. also number character vectors (including lists) coerced single characters, assuming valid hex codes.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Average of Hex Colors — getAvgHex","text":"single hex color character representing average input colors.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getAvgHex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Average of Hex Colors — getAvgHex","text":"","code":"getAvgHex(\"#000000\", \"#FF00FF\") #> [1] \"#800080\" getAvgHex(c(\"#008040\", \"#000000\", \"#FF00FF\")) #> [1] \"#552B6A\"  # very nonstandard but possible way to input hexes. Essentially, # any combination of vectors will work. getAvgHex(list(\"#008040\", \"#000000\"), \"#FF00FF\", c(\"#FF00FF\")) #> [1] \"#80208F\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getChar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Character at a Specific Index — getChar","title":"Get a Character at a Specific Index — getChar","text":"function retrieves character specific index string.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getChar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Character at a Specific Index — getChar","text":"","code":"getChar(x, index)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getChar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Character at a Specific Index — getChar","text":"x character string. index index character retrieve.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getChar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Character at a Specific Index — getChar","text":"character specified index.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getChar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Character at a Specific Index — getChar","text":"","code":"# Get the character at index 2 getChar(\"hello\", 2) #> [1] \"e\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPkgKeywords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Keywords from R Package Documentation — getPkgKeywords","title":"Get Keywords from R Package Documentation — getPkgKeywords","text":"function retrieves keywords package documentation files located /man directory specified R package. can return unique list keywords frequency distribution keywords table object, sorted keys. Note \"internal\" keyword ignored.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPkgKeywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Keywords from R Package Documentation — getPkgKeywords","text":"","code":"getPkgKeywords(pkg = \".\", asDistribution = FALSE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPkgKeywords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Keywords from R Package Documentation — getPkgKeywords","text":"pkg path R package directory. asDistribution Logical; FALSE, returns character vector unique keywords. TRUE, returns table frequency keyword.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPkgKeywords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Keywords from R Package Documentation — getPkgKeywords","text":"asDistribution FALSE, sorted character vector unique keywords returned. asDistribution TRUE, table keywords frequencies returned. keywords detected, returns character length 0.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPkgKeywords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Keywords from R Package Documentation — getPkgKeywords","text":"","code":"getPkgKeywords() #> Warning: no `/man` folder detected - ensure the package path is correct #> character(0) getPkgKeywords(asDistribution = TRUE) #> Warning: no `/man` folder detected - ensure the package path is correct #> character(0)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPlotDims.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","title":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","text":"function retrieves minimum maximum x y dimensions ggplot object. Note dimension plot within x y axis dimensions actual output image . may useful numerical computations modifying plots, can slow since builds actual plot first.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPlotDims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","text":"","code":"getPlotDims(plt)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPlotDims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","text":"plt ggplot object.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPlotDims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","text":"list elements xr (vector xmin xmax) yr (vector ymin ymax).","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getPlotDims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the xmin, xmax, ymin, ymax of a ggplot Object — getPlotDims","text":"","code":"library(ggplot2) getPlotDims(ggplot(mtcars) + geom_point(aes(mpg, cyl))) #> $xr #> [1] 10.4 33.9 #>  #> $yr #> [1] 4 8 #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getUniquePairsUpTo.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","title":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","text":"function generates unique pairs integers given number.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getUniquePairsUpTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","text":"","code":"getUniquePairsUpTo(x, oneIndexed = TRUE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getUniquePairsUpTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","text":"x integer specifying upper limit pairs. oneIndexed logical indicating whether pairs one-indexed. Default TRUE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getUniquePairsUpTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","text":"list unique pairs integers specified number.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getUniquePairsUpTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Unique Pairs Up To a Number — getUniquePairsUpTo","text":"","code":"# Generate unique pairs up to 3 (one-indexed) getUniquePairsUpTo(3) #> [[1]] #> [1] 1 2 #>  #> [[2]] #> [1] 1 3 #>  #> [[3]] #> [1] 2 3 #>  # Generate unique pairs up to 3 (zero-indexed) getUniquePairsUpTo(3, oneIndexed = FALSE) #> [[1]] #> [1] 0 1 #>  #> [[2]] #> [1] 0 2 #>  #> [[3]] #> [1] 1 2 #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getfirst.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the First Elements of a Vector or List — getfirst","title":"Get the First Elements of a Vector or List — getfirst","text":"function retrieves first n elements vector list.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getfirst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the First Elements of a Vector or List — getfirst","text":"","code":"getfirst(x, n = 1)  # Default S3 method getfirst(x, n = 1)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getfirst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the First Elements of a Vector or List — getfirst","text":"x vector, list, supported data type. n integer specifying number elements retrieve start. Default 1.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getfirst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the First Elements of a Vector or List — getfirst","text":"first n elements input.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getfirst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the First Elements of a Vector or List — getfirst","text":"","code":"# Get the first element of a vector getfirst(c(1, 2, 3, 4, 5)) #> [1] 1 # Get the first 2 elements of a vector getfirst(c(1, 2, 3, 4, 5), 2) #> [1] 2 # Get the first element of a list getfirst(list(\"a\", \"b\", \"c\")) #> [1] \"a\" # Get the first 2 elements of a list getfirst(list(\"a\", \"b\", \"c\"), 2) #> [1] \"b\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getlast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Last Elements of a Vector or List — getlast","title":"Get the Last Elements of a Vector or List — getlast","text":"function retrieves last n elements vector list.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getlast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Last Elements of a Vector or List — getlast","text":"","code":"getlast(x, n = 1)  # Default S3 method getlast(x, n = 1)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getlast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Last Elements of a Vector or List — getlast","text":"x vector, list, supported data type. n integer specifying number elements retrieve end. Default 1.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getlast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Last Elements of a Vector or List — getlast","text":"last n elements input.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/getlast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Last Elements of a Vector or List — getlast","text":"","code":"# Get the last element of a vector getlast(c(1, 2, 3, 4, 5)) #> [1] 5 # Get the last 2 elements of a vector getlast(c(1, 2, 3, 4, 5), 2) #> [1] 4 # Get the last element of a list getlast(list(\"a\", \"b\", \"c\")) #> [1] \"c\" # Get the last 2 elements of a list getlast(list(\"a\", \"b\", \"c\"), 2) #> [1] \"b\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/greplDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for a Pattern in Files within a Directory — greplDir","title":"Search for a Pattern in Files within a Directory — greplDir","text":"greplDir function searches specified pattern files within given directory. allows optional exclusion files matching specified regular expression. Note files assumed single string, line joined newline character \"\\n\".","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/greplDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for a Pattern in Files within a Directory — greplDir","text":"","code":"greplDir(fpattern, dirPath = getwd(), fIgnoreRegex = NULL, ...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/greplDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for a Pattern in Files within a Directory — greplDir","text":"fpattern Character. pattern search within files. dirPath Character. path directory containing files searched. fIgnoreRegex Character. regular expression match file names ignored (default NULL). ... Additional arguments passed listFiles(), passed list.files()","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/greplDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for a Pattern in Files within a Directory — greplDir","text":"named logical vector indicating files contain pattern. names attribute contains file names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/greplDir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for a Pattern in Files within a Directory — greplDir","text":"","code":"# \\donttest{ result <- tryCatch(   greplDir(\"error\", fIgnoreRegex = \"\\\\.log$\"),   warning = function(w) c(exFname = TRUE),   error = function(e) c(exFname = TRUE) ) # its even more useful to use `base::which` on the result to # get matches and mismatches - this returns it with names # by default which(result) #> exFname  #>       1  which(!result) #> named integer(0) # }"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Index from Enumerated Element — ind","title":"Get Index from Enumerated Element — ind","text":"function extracts index enumerated element.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Index from Enumerated Element — ind","text":"","code":"ind(elem)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Index from Enumerated Element — ind","text":"elem enumerated element.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/ind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Index from Enumerated Element — ind","text":"index enumerated element.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/ind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Index from Enumerated Element — ind","text":"","code":"# Extract index from an enumerated element elem <- list(1, \"a\") ind(elem) #> [1] 1"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initDataFrameWithColnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","title":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","text":"function creates empty data frame assigns specified column names zero rows.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initDataFrameWithColnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","text":"","code":"initDataFrameWithColnames(colnames = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initDataFrameWithColnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","text":"colnames character vector specifying names columns data frame. vector attempted coerced character.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initDataFrameWithColnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","text":"data frame specified column names. Non unique names handled conventions data.frame(). prefixes.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initDataFrameWithColnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a DataFrame with Column Names — initDataFrameWithColnames","text":"","code":"# Create a data frame with specified column names initialized with NA initDataFrameWithColnames(c(\"Name\", \"Age\", \"Gender\")) #> [1] Name   Age    Gender #> <0 rows> (or 0-length row.names)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initEmptyTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize an Empty Table — initEmptyTable","title":"Initialize an Empty Table — initEmptyTable","text":"function initializes empty table.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initEmptyTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize an Empty Table — initEmptyTable","text":"","code":"initEmptyTable()"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initEmptyTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize an Empty Table — initEmptyTable","text":"empty table structure.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initEmptyTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize an Empty Table — initEmptyTable","text":"","code":"# Create an empty table initEmptyTable() #> < table of extent 0 >"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initList.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a List — initList","title":"Initialize a List — initList","text":"function initializes list based size names, optional initial value.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a List — initList","text":"","code":"initList(x = NULL, initVal = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a List — initList","text":"x character vector names, numeric indicating size list. initVal optional initial value elements list.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a List — initList","text":"list specified size names, optionally initialized value.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a List — initList","text":"","code":"# Create a list with 3 elements initList(3) #> [[1]] #> NULL #>  #> [[2]] #> NULL #>  #> [[3]] #> NULL #>  # Create a named list initialized with NULL initList(c(\"a\", \"b\", \"c\")) #> $a #> NULL #>  #> $b #> NULL #>  #> $c #> NULL #>  # Create a list with 2 elements initialized with 0 initList(2, 0) #> [[1]] #> [1] 0 #>  #> [[2]] #> [1] 0 #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initTestthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Testthat Files — initTestthat","title":"Initialize Testthat Files — initTestthat","text":"function scans files specified R directory based name, excluding based patterns provided ignore argument, creates testthat files missing. Useful many source code files created rapid development unit testing yet setup.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initTestthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Testthat Files — initTestthat","text":"","code":"initTestthat(   rDir = \"R\",   testDir = \"tests/testthat\",   .ignore = c(\"-package.R$\", \"-class.R$\", \"^data.R$\", \"^zzz.R$\", \"^RcppExports.R$\"),   ignore = NULL )"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initTestthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Testthat Files — initTestthat","text":"rDir directory containing R source files. Default \"R\". testDir directory testthat files created. Default \"tests/testthat\". .ignore character vector specifying regex patterns files ignore. Defaults common patterns c(\"-package.R$\", \"-class.R$\", \"^data.R$\", \"^zzz.R$\", \"^RcppExports.R$\") ignore character vector extra regex patterns R files ignore","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initTestthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Testthat Files — initTestthat","text":"return value, called side effects.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initTestthat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Testthat Files — initTestthat","text":"","code":"# \\donttest{ try({  initTestthat() initTestthat(rDir = \"src\", testDir = \"tests\") initTestthat(ignore = c(\"^foo\", \"-bar.R$\"))  }, silent = TRUE) #> ✔ Setting active project to '/home/runner/work/FastUtils/FastUtils' #> Warning: Package 'testthat' is already listed in 'Imports' in DESCRIPTION, no change made. #> ✔ Leaving 'tests/testthat.R' unchanged #> • Call `use_test()` to initialize a basic test file and open it for editing. #> Warning: Package 'testthat' is already listed in 'Imports' in DESCRIPTION, no change made. #> ✔ Leaving 'tests/testthat.R' unchanged #> • Call `use_test()` to initialize a basic test file and open it for editing. #> Warning: Package 'testthat' is already listed in 'Imports' in DESCRIPTION, no change made. #> ✔ Leaving 'tests/testthat.R' unchanged #> • Call `use_test()` to initialize a basic test file and open it for editing. # }"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initV.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a Vector — initV","title":"Initialize a Vector — initV","text":"function initializes vector based specified type size, optional initial value.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a Vector — initV","text":"","code":"initV(typeFunc, x, initVal = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a Vector — initV","text":"typeFunc character string indicating type vector function create vector. x length vector. initVal optional initial value fill vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a Vector — initV","text":"vector specified type size, optionally initialized value.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/initV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a Vector — initV","text":"","code":"# Create a numeric vector of length 5 initV(\"numeric\", 5) #> [1] 0 0 0 0 0 # Create a logical vector of length 3 initialized with TRUE initV(\"logical\", 3, TRUE) #> [1] TRUE TRUE TRUE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isBound.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Number is within a Range — isBound","title":"Check if a Number is within a Range — isBound","text":"function checks number within specified range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isBound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Number is within a Range — isBound","text":"","code":"isBound(num, lowerbound, upperbound)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isBound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Number is within a Range — isBound","text":"num numeric vector checked. lowerbound lower bound range. upperbound upper bound range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isBound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Number is within a Range — isBound","text":"logical vector indicating whether element within specified range.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isBound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Number is within a Range — isBound","text":"","code":"isBound(1, 0, 2) #> [1] TRUE isBound(1:10, -1, 5) #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isCamelCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is camelCase — isCamelCase","title":"Check if String is camelCase — isCamelCase","text":"function checks given string adheres camelCase naming conventions, starting lowercase letter followed combination upper lower case letters.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isCamelCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is camelCase — isCamelCase","text":"","code":"isCamelCase(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isCamelCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is camelCase — isCamelCase","text":"x character string check.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isCamelCase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is camelCase — isCamelCase","text":"TRUE string camelCase, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isCamelCase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is camelCase — isCamelCase","text":"","code":"isCamelCase(\"camelCase\")   # returns TRUE #> [1] TRUE isCamelCase(\"CamelCase\")   # returns FALSE #> [1] FALSE isCamelCase(\"camelcase\")   # returns TRUE #> [1] TRUE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isEven.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Number is Even — isEven","title":"Check if a Number is Even — isEven","text":"function checks number even.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isEven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Number is Even — isEven","text":"","code":"isEven(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isEven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Number is Even — isEven","text":"x numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isEven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Number is Even — isEven","text":"logical vector indicating whether element even.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isEven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Number is Even — isEven","text":"","code":"# Check if numbers are even isEven(c(1, 2, 3, 4)) #> [1] FALSE  TRUE FALSE  TRUE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isOdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Number is Odd — isOdd","title":"Check if a Number is Odd — isOdd","text":"function checks number odd.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isOdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Number is Odd — isOdd","text":"","code":"isOdd(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isOdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Number is Odd — isOdd","text":"x numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isOdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Number is Odd — isOdd","text":"logical vector indicating whether element odd.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isOdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Number is Odd — isOdd","text":"","code":"# Check if numbers are odd isOdd(c(1, 2, 3, 4)) #> [1]  TRUE FALSE  TRUE FALSE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isPascalCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is PascalCase — isPascalCase","title":"Check if String is PascalCase — isPascalCase","text":"function checks given string adheres PascalCase naming conventions, starting uppercase letter followed combination upper lower case letters.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isPascalCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is PascalCase — isPascalCase","text":"","code":"isPascalCase(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isPascalCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is PascalCase — isPascalCase","text":"x character string check.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isPascalCase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is PascalCase — isPascalCase","text":"TRUE string PascalCase, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isPascalCase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is PascalCase — isPascalCase","text":"","code":"isPascalCase(\"PascalCase\") # returns TRUE #> [1] TRUE isPascalCase(\"pascalCase\") # returns FALSE #> [1] FALSE isPascalCase(\"Pascalcase\") # returns FALSE #> [1] TRUE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isSnakeCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is snake_case — isSnakeCase","title":"Check if String is snake_case — isSnakeCase","text":"function checks given string adheres snake_case naming conventions. default (strict = TRUE), allows lowercase letters separated underscores. strict FALSE, uppercase letters also permitted.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isSnakeCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is snake_case — isSnakeCase","text":"","code":"isSnakeCase(x, strict = TRUE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isSnakeCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is snake_case — isSnakeCase","text":"x character string check. strict Logical indicating whether string strictly contain lowercase letters (TRUE) can include uppercase letters (FALSE). Default TRUE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isSnakeCase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is snake_case — isSnakeCase","text":"TRUE string snake_case according specified strictness, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isSnakeCase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is snake_case — isSnakeCase","text":"","code":"isSnakeCase(\"snake_case\")        # returns TRUE #> [1] TRUE isSnakeCase(\"Snake_Case\")        # returns FALSE #> [1] FALSE isSnakeCase(\"snake_case\", FALSE) # returns TRUE #> [1] TRUE isSnakeCase(\"Snake_Case\", FALSE) # returns TRUE #> [1] TRUE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isVowel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Character is a Vowel — isVowel","title":"Check if a Character is a Vowel — isVowel","text":"function checks character vowel.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isVowel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Character is a Vowel — isVowel","text":"","code":"isVowel(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isVowel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Character is a Vowel — isVowel","text":"x character.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isVowel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Character is a Vowel — isVowel","text":"TRUE character vowel, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/isVowel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Character is a Vowel — isVowel","text":"","code":"# Check if 'a' is a vowel isVowel(\"a\") #> [1] TRUE # Check if 'b' is a vowel isVowel(\"b\") #> [1] FALSE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/joinRegex.html","id":null,"dir":"Reference","previous_headings":"","what":"Join regex expressions by union — joinRegex","title":"Join regex expressions by union — joinRegex","text":"function simply joins vector regex characters union, produces single character regex form (foo)|(bar).","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/joinRegex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join regex expressions by union — joinRegex","text":"","code":"joinRegex(...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/joinRegex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join regex expressions by union — joinRegex","text":"... character vectors regex expressions join. vectors individual characters length work","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/joinRegex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join regex expressions by union — joinRegex","text":"character unioned regex","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/joinRegex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join regex expressions by union — joinRegex","text":"","code":"joinRegex(c(\"^foo\", \"bar$\")) #> [1] \"(^foo)|(bar$)\" joinRegex(\"^foo\", \"bar$\", \"[bB]az\") #> [1] \"(^foo)|(bar$)|([bB]az)\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/listFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List Only Files in a Directory — listFiles","title":"List Only Files in a Directory — listFiles","text":"function lists files specified directory, excluding directories. useful need process analyze files within directory without including subdirectories. base::list.files() function lists files directories, function provides convenient way obtain just files.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/listFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Only Files in a Directory — listFiles","text":"","code":"listFiles(dirPath, ...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/listFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Only Files in a Directory — listFiles","text":"dirPath Character. path directory list files. ... Additional arguments passed base::list.files() (e.g., pattern, recursive). Note full.names ignored.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/listFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Only Files in a Directory — listFiles","text":"character vector file paths.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/listFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Only Files in a Directory — listFiles","text":"","code":"# \\donttest{ listFiles(getwd()) #>  [1] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/FastUtils-package.html\"         #>  [2] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/Rplot001.png\"                   #>  [3] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/add.html\"                       #>  [4] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/bound.html\"                     #>  [5] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/closestWord.html\"               #>  [6] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/colToRownames.html\"             #>  [7] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/createHash.html\"                #>  [8] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/createMutator.html\"             #>  [9] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/createPkgLoader.html\"           #> [10] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/divide.html\"                    #> [11] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/enclose.html\"                   #> [12] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/encloseBr.html\"                 #> [13] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/enumerateit.html\"               #> [14] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/findMissingRdSections.html\"     #> [15] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/fixColnames.html\"               #> [16] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getAvgHex.html\"                 #> [17] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getChar.html\"                   #> [18] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getPkgKeywords.html\"            #> [19] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getPlotDims.html\"               #> [20] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getUniquePairsUpTo.html\"        #> [21] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getfirst.html\"                  #> [22] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/getlast.html\"                   #> [23] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/greplDir.html\"                  #> [24] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/ind.html\"                       #> [25] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/index.html\"                     #> [26] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/initDataFrameWithColnames.html\" #> [27] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/initEmptyTable.html\"            #> [28] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/initList.html\"                  #> [29] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/initTestthat.html\"              #> [30] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/initV.html\"                     #> [31] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isBound.html\"                   #> [32] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isCamelCase.html\"               #> [33] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isEven.html\"                    #> [34] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isOdd.html\"                     #> [35] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isPascalCase.html\"              #> [36] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isSnakeCase.html\"               #> [37] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/isVowel.html\"                   #> [38] \"/home/runner/work/FastUtils/FastUtils/docs/dev/reference/joinRegex.html\"                 listFiles(getwd(), pattern = \"\\\\.R$\", recursive = TRUE) #> character(0) # }"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/multiply.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply Two Numbers — multiply","title":"Multiply Two Numbers — multiply","text":"function multiplies two numbers.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/multiply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply Two Numbers — multiply","text":"","code":"multiply(x, y)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/multiply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply Two Numbers — multiply","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/multiply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply Two Numbers — multiply","text":"numeric vector representing product input vectors.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/multiply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply Two Numbers — multiply","text":"","code":"# Multiply two numeric vectors multiply(c(2, 3, 4), c(5, 6, 7)) #> [1] 10 18 28"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/mutateToRownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate columns to Row Names — mutateToRownames","title":"Mutate columns to Row Names — mutateToRownames","text":"function sets new row names data frame based tidy evaluation expression.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/mutateToRownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate columns to Row Names — mutateToRownames","text":"","code":"mutateToRownames(.data, expr, .remove = FALSE, .uniqueSep = \".\")"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/mutateToRownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate columns to Row Names — mutateToRownames","text":".data data frame. expr tidy evaluation expression specifying columns use new row names. .remove logical indicating whether remove selected columns. Default FALSE. .uniqueSep character string separate duplicate row names ensuring uniqueness make.unique(). Default \".\".","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/mutateToRownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate columns to Row Names — mutateToRownames","text":"data frame updated row names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/mutateToRownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate columns to Row Names — mutateToRownames","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  mtcars %>%     head() %>%     mutateToRownames(wt + 3*vs) #>        mpg cyl disp  hp drat    wt  qsec vs am gear carb #> 2.62  21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> 2.875 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> 5.32  22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> 6.215 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> 3.44  18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> 6.46  18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/namedNumericToTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Named Numeric Vector to Table — namedNumericToTable","title":"Convert Named Numeric Vector to Table — namedNumericToTable","text":"function converts named numeric vector table.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/namedNumericToTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Named Numeric Vector to Table — namedNumericToTable","text":"","code":"namedNumericToTable(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/namedNumericToTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Named Numeric Vector to Table — namedNumericToTable","text":"x named numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/namedNumericToTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Named Numeric Vector to Table — namedNumericToTable","text":"table names values input vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/namedNumericToTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Named Numeric Vector to Table — namedNumericToTable","text":"","code":"# Convert a named numeric vector to a table vec <- c(a = 1, b = 2, c = 3) namedNumericToTable(vec) #>  #> a b c  #> 1 2 3"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/prependIndefArticle.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepend an Indefinite Article to a String — prependIndefArticle","title":"Prepend an Indefinite Article to a String — prependIndefArticle","text":"function prepends indefinite article (\"\" \"\") string based whether starts vowel .","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/prependIndefArticle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepend an Indefinite Article to a String — prependIndefArticle","text":"","code":"prependIndefArticle(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/prependIndefArticle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepend an Indefinite Article to a String — prependIndefArticle","text":"x character string.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/prependIndefArticle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepend an Indefinite Article to a String — prependIndefArticle","text":"string indefinite article prepended.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/prependIndefArticle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepend an Indefinite Article to a String — prependIndefArticle","text":"","code":"# Prepend an indefinite article to \"apple\" prependIndefArticle(\"apple\") #> [1] \"an apple\" # Prepend an indefinite article to \"banana\" prependIndefArticle(\"banana\") #> [1] \"a banana\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/quietly.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress Messages and Output — quietly","title":"Suppress Messages and Output — quietly","text":"function suppresses messages captures output expression.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/quietly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress Messages and Output — quietly","text":"","code":"quietly(e)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/quietly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress Messages and Output — quietly","text":"e expression evaluate.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/quietly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress Messages and Output — quietly","text":"result expression messages suppressed output captured.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/quietly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress Messages and Output — quietly","text":"","code":"quietly(print(1))  quietly({     print(1)     print(2)     print(3) })  a <- 1 quietly({     a <- a + 1     print(a) })"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rmByName.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Elements with Specified Name Regex — rmByName","title":"Remove Elements with Specified Name Regex — rmByName","text":"function removes elements indexable object (e.g., named vector list) names match specified regular expression.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rmByName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Elements with Specified Name Regex — rmByName","text":"","code":"rmByName(x, pattern, silent = FALSE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rmByName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Elements with Specified Name Regex — rmByName","text":"x indexable object (e.g., named vector, list, data frame). pattern character containing regular expression(s) match names elements removed. silent logical indicating whether silence warning names detected.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rmByName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Elements with Specified Name Regex — rmByName","text":"input object elements removed based name regex.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rmByName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Elements with Specified Name Regex — rmByName","text":"","code":"myList <- list(a = 1, b_test = 2, c = 3, d_test = 4) rmByName(myList, \"_test\") #> $a #> [1] 1 #>  #> $c #> [1] 3 #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rownamesToCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Row Names to a Column — rownamesToCol","title":"Convert Row Names to a Column — rownamesToCol","text":"function converts row names data frame specified column. Note specified column already exists, overwritten.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rownamesToCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Row Names to a Column — rownamesToCol","text":"","code":"rownamesToCol(df, colname = \"rownames\")"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rownamesToCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Row Names to a Column — rownamesToCol","text":"df data frame. colname character string specifying name new column contain row names. Defaults \"rownames\".","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rownamesToCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Row Names to a Column — rownamesToCol","text":"data frame row names converted column.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/rownamesToCol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Row Names to a Column — rownamesToCol","text":"","code":"# Convert row names to a column named 'ID' df <- data.frame(Value = c(10, 20, 30)) rownames(df) <- c(\"A\", \"B\", \"C\") rownamesToCol(df, \"ID\") #>   Value ID #> 1    10  A #> 2    20  B #> 3    30  C"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/scaleHex.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale the Brightness of a Hex Color — scaleHex","title":"Scale the Brightness of a Hex Color — scaleHex","text":"function scales brightness hex colors given factor.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/scaleHex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale the Brightness of a Hex Color — scaleHex","text":"","code":"scaleHex(hex, scaleFactor)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/scaleHex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale the Brightness of a Hex Color — scaleHex","text":"hex Hex color values characters. scaleFactor numeric value scale brightness. value 1 returns original color.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/scaleHex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale the Brightness of a Hex Color — scaleHex","text":"hex color value adjusted brightness.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/scaleHex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale the Brightness of a Hex Color — scaleHex","text":"","code":"scaleHex(\"#404040\", 2) #> [1] \"#808080\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setColnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Column Names — setColnames","title":"Set Column Names — setColnames","text":"function sets new column names given data frame matrix.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setColnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Column Names — setColnames","text":"","code":"setColnames(object, newColnames)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setColnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Column Names — setColnames","text":"object data frame matrix. newColnames character vector specifying new column names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setColnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Column Names — setColnames","text":"data frame matrix updated column names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setColnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Column Names — setColnames","text":"","code":"# Set new column names for a data frame df <- data.frame(A = c(1, 2, 3), B = c(4, 5, 6)) setColnames(df, c(\"X\", \"Y\")) #>   X Y #> 1 1 4 #> 2 2 5 #> 3 3 6"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setRownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Row Names — setRownames","title":"Set Row Names — setRownames","text":"function sets new row names given data frame matrix.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setRownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Row Names — setRownames","text":"","code":"setRownames(object, newRownames)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setRownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Row Names — setRownames","text":"object data frame matrix. newRownames character vector specifying new row names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setRownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Row Names — setRownames","text":"data frame matrix updated row names.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/setRownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Row Names — setRownames","text":"","code":"# Set new row names for a data frame df <- data.frame(A = c(1, 2, 3), B = c(4, 5, 6)) setRownames(df, c(\"row1\", \"row2\", \"row3\")) #>      A B #> row1 1 4 #> row2 2 5 #> row3 3 6"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":null,"dir":"Reference","previous_headings":"","what":"Split CamelCase or PascalCase Strings — splitCamel","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"function splits strings formatted camelCase PascalCase component words. can handle words uppercase letters transition lowercase letters, capable handling strings sequences uppercase letters followed lowercase letters, effectively separating acronyms camelCase beginnings.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"","code":"splitCamel(x, conseq = TRUE)  splitPascal(x, conseq = TRUE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"https://stackoverflow.com/questions/8406974/splitting-camelcase--r","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"x character vector containing CamelCase PascalCase strings split. conseq Logical indicating whether consecutive uppercase letters treated part previous word (TRUE) separate words (FALSE). Default TRUE.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"list character vectors, containing parts corresponding CamelCase PascalCase string split appropriate transitions. conseq FALSE, acronyms followed words separated.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitCamel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split CamelCase or PascalCase Strings — splitCamel","text":"","code":"splitCamel(\"splitCamelCaseIntoWords\") #> [[1]] #> [1] \"split\" \"Camel\" \"Case\"  \"Into\"  \"Words\" #>  splitCamel(c(\"fooBar\", \"FOOBar\", \"anotherFOOBarTest\"), conseq = FALSE) #> [[1]] #> [1] \"foo\" \"Bar\" #>  #> [[2]] #> [1] \"F\"   \"O\"   \"O\"   \"Bar\" #>  #> [[3]] #> [1] \"another\" \"F\"       \"O\"       \"O\"       \"Bar\"     \"Test\"    #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitSnake.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Snake Case String — splitSnake","title":"Split Snake Case String — splitSnake","text":"function splits string formatted snake_case component words, using underscores delimiters. useful parsing identifiers variable names follow snake_case naming conventions.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitSnake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Snake Case String — splitSnake","text":"","code":"splitSnake(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitSnake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Snake Case String — splitSnake","text":"x character string snake_case split.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitSnake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Snake Case String — splitSnake","text":"list character vectors, containing parts string split underscores.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/splitSnake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Snake Case String — splitSnake","text":"","code":"splitSnake(\"this_is_snake_case\") #> [[1]] #> [1] \"this\"  \"is\"    \"snake\" \"case\"  #>  splitSnake(\"another_example_here\") #> [[1]] #> [1] \"another\" \"example\" \"here\"    #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/startsWithVowel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a String Starts with a Vowel — startsWithVowel","title":"Check if a String Starts with a Vowel — startsWithVowel","text":"function checks string starts vowel.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/startsWithVowel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a String Starts with a Vowel — startsWithVowel","text":"","code":"startsWithVowel(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/startsWithVowel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a String Starts with a Vowel — startsWithVowel","text":"x character string.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/startsWithVowel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a String Starts with a Vowel — startsWithVowel","text":"TRUE string starts vowel, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/startsWithVowel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a String Starts with a Vowel — startsWithVowel","text":"","code":"# Check if \"apple\" starts with a vowel startsWithVowel(\"apple\") #> [1] TRUE # Check if \"banana\" starts with a vowel startsWithVowel(\"banana\") #> [1] FALSE"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stopp.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Stop Function Without Call — stopp","title":"Custom Stop Function Without Call — stopp","text":"function provides wrapper around base stop function, automatically sets call. FALSE, means function call included resulting error message. makes error messages cleaner. domain argument can used specify translation domain.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stopp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Stop Function Without Call — stopp","text":"","code":"stopp(..., domain = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stopp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Stop Function Without Call — stopp","text":"... Arguments passed stop. domain translation domain, NULL default.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stopp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Stop Function Without Call — stopp","text":"return value, function stops execution program.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stopp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Stop Function Without Call — stopp","text":"","code":"# \\donttest{ try(stopp(\"This is a custom stop message without the call.\"), silent = TRUE) # }"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stripSpaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Spaces from a String — stripSpaces","title":"Remove Spaces from a String — stripSpaces","text":"function removes spaces character string.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stripSpaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Spaces from a String — stripSpaces","text":"","code":"stripSpaces(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stripSpaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Spaces from a String — stripSpaces","text":"x character string.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stripSpaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Spaces from a String — stripSpaces","text":"string spaces removed.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/stripSpaces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Spaces from a String — stripSpaces","text":"","code":"# Remove spaces from \"hello world\" stripSpaces(\"hello world\") #> [1] \"helloworld\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/substrEnd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Substring from Start to End Difference — substrEnd","title":"Extract Substring from Start to End Difference — substrEnd","text":"function extracts substring given start position position determined subtracting endDiff string length.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/substrEnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Substring from Start to End Difference — substrEnd","text":"","code":"substrEnd(x, start, endDiff)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/substrEnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Substring from Start to End Difference — substrEnd","text":"x character string substring extracted. start starting position substring extraction. endDiff difference subtract string length determine end position.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/substrEnd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Substring from Start to End Difference — substrEnd","text":"substring input character string.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/substrEnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Substring from Start to End Difference — substrEnd","text":"","code":"substrEnd(\"12345\", 1, 1) #> [1] \"1234\" substrEnd(\"12345\", 1, 2) #> [1] \"123\" substrEnd(\"12345\", 2, 3) #> [1] \"2\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/subtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract Two Numbers — subtract","title":"Subtract Two Numbers — subtract","text":"function subtracts one number another.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/subtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract Two Numbers — subtract","text":"","code":"subtract(x, y)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/subtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract Two Numbers — subtract","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/subtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract Two Numbers — subtract","text":"numeric vector representing difference input vectors.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/subtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract Two Numbers — subtract","text":"","code":"# Subtract two numeric vectors subtract(c(10, 20, 30), c(1, 2, 3)) #> [1]  9 18 27"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/tableToNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Table to Numeric — tableToNumeric","title":"Convert a Table to Numeric — tableToNumeric","text":"function converts table numeric vector.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/tableToNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Table to Numeric — tableToNumeric","text":"","code":"tableToNumeric(x)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/tableToNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Table to Numeric — tableToNumeric","text":"x table converted.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/tableToNumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Table to Numeric — tableToNumeric","text":"numeric vector names preserved table.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/tableToNumeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Table to Numeric — tableToNumeric","text":"","code":"# Convert a table to numeric tbl <- table(c(\"a\", \"b\", \"a\")) tableToNumeric(tbl) #> a b  #> 2 1"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/test_quietly_that.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Testthat test Quietly — test_quietly_that","title":"Run a Testthat test Quietly — test_quietly_that","text":"function runs test_that block quietly, suppressing messages output verbose functions.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/test_quietly_that.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Testthat test Quietly — test_quietly_that","text":"","code":"test_quietly_that(desc, code)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/test_quietly_that.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a Testthat test Quietly — test_quietly_that","text":"desc description test. code code tested.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/test_quietly_that.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a Testthat test Quietly — test_quietly_that","text":"return value, called side effects.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/test_quietly_that.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a Testthat test Quietly — test_quietly_that","text":"","code":"# Run a test quietly test_quietly_that(\"quiet test example\", {     testthat::expect_equal(1 + 1, 2) }) #> Test passed"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/trySplitWords.html","id":null,"dir":"Reference","previous_headings":"","what":"Try to Split Words Based on Naming Convention — trySplitWords","title":"Try to Split Words Based on Naming Convention — trySplitWords","text":"function attempts split characters component words (default, lowercase) based  camelCase, PascalCase, snake_case conventions. string match conventions, returns groups letters.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/trySplitWords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try to Split Words Based on Naming Convention — trySplitWords","text":"","code":"trySplitWords(..., conseq = TRUE, strictSnake = FALSE, uncase = TRUE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/trySplitWords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try to Split Words Based on Naming Convention — trySplitWords","text":"... character(s) split, treated single vector unlisting conseq logical indicating whether conseq argument splitCamel()/ splitPascal() TRUE FALSE. strictSnake logical indicating strict argument isSnakeCase(). uncase logical indicating whether remove casing output lowercase.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/trySplitWords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try to Split Words Based on Naming Convention — trySplitWords","text":"list character vectors, containing parts string split individual words.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/trySplitWords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Try to Split Words Based on Naming Convention — trySplitWords","text":"","code":"trySplitWords(\"camelCaseExample\") #> [[1]] #> [1] \"camel\"   \"case\"    \"example\" #>  trySplitWords(\"PascalCaseExample\") #> [[1]] #> [1] \"pascal\"  \"case\"    \"example\" #>  trySplitWords(\"snake_case_example\", c(\"more_snake_cases\"), \"third_snake_case\") #> [[1]] #> [1] \"snake\"   \"case\"    \"example\" #>  #> [[2]] #> [1] \"more\"  \"snake\" \"cases\" #>  #> [[3]] #> [1] \"third\" \"snake\" \"case\"  #>  trySplitWords(\"some|random|case\") #> [[1]] #> [1] \"some\"   \"random\" \"case\"   #>  trySplitWords(\"Space Words\", \"UPPER_CASE\", uncase = TRUE) #> [[1]] #> [1] \"space\" \"words\" #>  #> [[2]] #> [1] \"upper\" \"case\"  #>"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Value from Enumerated Element by Index — val","title":"Get Value from Enumerated Element by Index — val","text":"function extracts value enumerated element given index.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Value from Enumerated Element by Index — val","text":"","code":"val(elem, index)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Value from Enumerated Element by Index — val","text":"elem enumerated element. index index value extract.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Value from Enumerated Element by Index — val","text":"value specified index enumerated element.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Value from Enumerated Element by Index — val","text":"","code":"# Extract value from an enumerated element by index elem <- list(1, \"a\", \"b\") val(elem, 2) #> [1] \"b\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get First Value from Enumerated Element — val1","title":"Get First Value from Enumerated Element — val1","text":"function extracts first value enumerated element.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get First Value from Enumerated Element — val1","text":"","code":"val1(elem)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get First Value from Enumerated Element — val1","text":"elem enumerated element.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get First Value from Enumerated Element — val1","text":"first value enumerated element.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/val1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get First Value from Enumerated Element — val1","text":"","code":"# Extract the first value from an enumerated element elem <- list(1, \"a\", \"b\") val1(elem) #> [1] \"a\""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/validateObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Object — validateObject","title":"Validate Object — validateObject","text":"function validates object using list checks. check fails, error handler called default value returned.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/validateObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Object — validateObject","text":"","code":"validateObject(obj, checks, errorHandler = warningp, defaultReturn = NULL)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/validateObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Object — validateObject","text":"obj object validate. checks list functions, taking object argument returning NULL check passes error message check fails. errorHandler function handle errors, taking error message argument. Default warning. defaultReturn value return check fails. Default NULL.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/validateObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Object — validateObject","text":"original object checks pass, defaultReturn check fails.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/validateObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Object — validateObject","text":"","code":"# Define some checks checkNotNull <- function(x) if (is.null(x)) \"Object is NULL\" else NULL checkIsNumeric <- function(x) if (!is.numeric(x)) \"Object is not numeric\" else NULL  # Validate an object obj <- 42 validateObject(obj, list(checkNotNull, checkIsNumeric)) #> [1] 42  # Validate an object that fails a check obj <- NULL try(validateObject(obj, list(checkNotNull, checkIsNumeric), errorHandler = stop), silent = TRUE)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/warningp.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Warning Function Without Call — warningp","title":"Custom Warning Function Without Call — warningp","text":"function provides wrapper around base warning function, adding flexibility warnings setting call. FALSE automatically. modification means function call included warning message, streamlining output users.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/warningp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Warning Function Without Call — warningp","text":"","code":"warningp(...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/warningp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Warning Function Without Call — warningp","text":"... Arguments passed warning.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/warningp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Warning Function Without Call — warningp","text":"return value, function issues warning.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/warningp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Warning Function Without Call — warningp","text":"","code":"# \\donttest{ try(warningp(\"This is a custom warning message without the call.\"), silent = TRUE) #> Warning: This is a custom warning message without the call. # }"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/zipit.html","id":null,"dir":"Reference","previous_headings":"","what":"Zip Multiple Vectors or Lists — zipit","title":"Zip Multiple Vectors or Lists — zipit","text":"function combines multiple vectors lists element-wise list lists. slightly lighter weight alternative itertools::izip()","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/zipit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zip Multiple Vectors or Lists — zipit","text":"","code":"zipit(...)"},{"path":"https://qile0317.github.io/FastUtils/dev/reference/zipit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zip Multiple Vectors or Lists — zipit","text":"... Vectors lists combined.","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/reference/zipit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zip Multiple Vectors or Lists — zipit","text":"list lists, inner list contains elements corresponding positions input vectors lists.","code":""},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/reference/zipit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zip Multiple Vectors or Lists — zipit","text":"","code":"# Zip two vectors zipit(c(1, 2, 3), c(\"a\", \"b\", \"c\")) #> [[1]] #> [[1]][[1]] #> [1] 1 #>  #> [[1]][[2]] #> [1] \"a\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 2 #>  #> [[2]][[2]] #> [1] \"b\" #>  #>  #> [[3]] #> [[3]][[1]] #> [1] 3 #>  #> [[3]][[2]] #> [1] \"c\" #>  #>  # Zip three vectors zipit(c(1, 2), c(\"x\", \"y\"), c(TRUE, FALSE)) #> [[1]] #> [[1]][[1]] #> [1] 1 #>  #> [[1]][[2]] #> [1] \"x\" #>  #> [[1]][[3]] #> [1] TRUE #>  #>  #> [[2]] #> [[2]][[1]] #> [1] 2 #>  #> [[2]][[2]] #> [1] \"y\" #>  #> [[2]][[3]] #> [1] FALSE #>  #>"},{"path":[]},{"path":[]},{"path":"https://qile0317.github.io/FastUtils/dev/news/index.html","id":"changes-development-version","dir":"Changelog","previous_headings":"","what":"Changes","title":"FastUtils (development version)","text":"pkgdown site now tracked google analytics","code":""},{"path":"https://qile0317.github.io/FastUtils/dev/news/index.html","id":"fastutils-011","dir":"Changelog","previous_headings":"","what":"FastUtils 0.1.1","title":"FastUtils 0.1.1","text":"CRAN release: 2024-07-09 Initial CRAN release. Many functions err “readability” side rather “fast” side, performance improvements added every upcoming release rate increase exported functions per release slow .","code":""}]
